/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/bootstrap/js/dist/base-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/base-component.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap base-component.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./dom/data */ \"./node_modules/bootstrap/js/dist/dom/data.js\"), __webpack_require__(/*! ./util/index */ \"./node_modules/bootstrap/js/dist/util/index.js\"), __webpack_require__(/*! ./dom/event-handler */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./util/config */ \"./node_modules/bootstrap/js/dist/util/config.js\")) :\n  0;\n})(this, (function (Data, index, EventHandler, Config) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const VERSION = '5.2.2';\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config__default.default {\n    constructor(element, config) {\n      super();\n      element = index.getElement(element);\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data__default.default.set(this._element, this.constructor.DATA_KEY, this);\n    } // Public\n\n\n    dispose() {\n      Data__default.default.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler__default.default.off(this._element, this.constructor.EVENT_KEY);\n\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n\n    _queueCallback(callback, element, isAnimated = true) {\n      index.executeAfterTransition(callback, element, isAnimated);\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    } // Static\n\n\n    static getInstance(element) {\n      return Data__default.default.get(index.getElement(element), this.DATA_KEY);\n    }\n\n    static getOrCreateInstance(element, config = {}) {\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n\n  }\n\n  return BaseComponent;\n\n}));\n//# sourceMappingURL=base-component.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/base-component.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/data.js":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/data.js ***!
  \****************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap data.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n})(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n  const elementMap = new Map();\n  const data = {\n    set(element, key, instance) {\n      if (!elementMap.has(element)) {\n        elementMap.set(element, new Map());\n      }\n\n      const instanceMap = elementMap.get(element); // make it clear we only want one instance per element\n      // can be removed later when multiple key/instances are fine to be used\n\n      if (!instanceMap.has(key) && instanceMap.size !== 0) {\n        // eslint-disable-next-line no-console\n        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n        return;\n      }\n\n      instanceMap.set(key, instance);\n    },\n\n    get(element, key) {\n      if (elementMap.has(element)) {\n        return elementMap.get(element).get(key) || null;\n      }\n\n      return null;\n    },\n\n    remove(element, key) {\n      if (!elementMap.has(element)) {\n        return;\n      }\n\n      const instanceMap = elementMap.get(element);\n      instanceMap.delete(key); // free up element references if there are no instances left for an element\n\n      if (instanceMap.size === 0) {\n        elementMap.delete(element);\n      }\n    }\n\n  };\n\n  return data;\n\n}));\n//# sourceMappingURL=data.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/dom/data.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/event-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/event-handler.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap event-handler.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ../util/index */ \"./node_modules/bootstrap/js/dist/util/index.js\")) :\n  0;\n})(this, (function (index) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n  /**\n   * Private methods\n   */\n\n  function makeEventUid(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n\n  function getElementEvents(element) {\n    const uid = makeEventUid(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      hydrateObj(event, {\n        delegateTarget: element\n      });\n\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n\n      return fn.apply(element, [event]);\n    };\n  }\n\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (const domElement of domElements) {\n          if (domElement !== target) {\n            continue;\n          }\n\n          hydrateObj(event, {\n            delegateTarget: target\n          });\n\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, selector, fn);\n          }\n\n          return fn.apply(target, [event]);\n        }\n      }\n    };\n  }\n\n  function findHandler(events, callable, delegationSelector = null) {\n    return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n  }\n\n  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    const isDelegated = typeof handler === 'string'; // todo: tooltip passes `false` instead of selector, so we need to check\n\n    const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    let typeEvent = getTypeEvent(originalTypeEvent);\n\n    if (!nativeEvents.has(typeEvent)) {\n      typeEvent = originalTypeEvent;\n    }\n\n    return [isDelegated, callable, typeEvent];\n  }\n\n  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n\n    let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction); // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n\n    if (originalTypeEvent in customEvents) {\n      const wrapFunction = fn => {\n        return function (event) {\n          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n            return fn.call(this, event);\n          }\n        };\n      };\n\n      callable = wrapFunction(callable);\n    }\n\n    const events = getElementEvents(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n\n    if (previousFunction) {\n      previousFunction.oneOff = previousFunction.oneOff && oneOff;\n      return;\n    }\n\n    const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n  }\n\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n\n    if (!fn) {\n      return;\n    }\n\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n\n    for (const handlerKey of Object.keys(storeElementEvent)) {\n      if (handlerKey.includes(namespace)) {\n        const event = storeElementEvent[handlerKey];\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  }\n\n  function getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace(stripNameRegex, '');\n    return customEvents[event] || event;\n  }\n\n  const EventHandler = {\n    on(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, false);\n    },\n\n    one(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, true);\n    },\n\n    off(element, originalTypeEvent, handler, delegationFunction) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n\n      const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getElementEvents(element);\n      const storeElementEvent = events[typeEvent] || {};\n      const isNamespace = originalTypeEvent.startsWith('.');\n\n      if (typeof callable !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!Object.keys(storeElementEvent).length) {\n          return;\n        }\n\n        removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n        return;\n      }\n\n      if (isNamespace) {\n        for (const elementEvent of Object.keys(events)) {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        }\n      }\n\n      for (const keyHandlers of Object.keys(storeElementEvent)) {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          const event = storeElementEvent[keyHandlers];\n          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n      }\n    },\n\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n\n      const $ = index.getjQuery();\n      const typeEvent = getTypeEvent(event);\n      const inNamespace = event !== typeEvent;\n      let jQueryEvent = null;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n\n      let evt = new Event(event, {\n        bubbles,\n        cancelable: true\n      });\n      evt = hydrateObj(evt, args);\n\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n\n      if (evt.defaultPrevented && jQueryEvent) {\n        jQueryEvent.preventDefault();\n      }\n\n      return evt;\n    }\n\n  };\n\n  function hydrateObj(obj, meta) {\n    for (const [key, value] of Object.entries(meta || {})) {\n      try {\n        obj[key] = value;\n      } catch (_unused) {\n        Object.defineProperty(obj, key, {\n          configurable: true,\n\n          get() {\n            return value;\n          }\n\n        });\n      }\n    }\n\n    return obj;\n  }\n\n  return EventHandler;\n\n}));\n//# sourceMappingURL=event-handler.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/dom/event-handler.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/manipulator.js":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/manipulator.js ***!
  \***********************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap manipulator.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n})(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  function normalizeData(value) {\n    if (value === 'true') {\n      return true;\n    }\n\n    if (value === 'false') {\n      return false;\n    }\n\n    if (value === Number(value).toString()) {\n      return Number(value);\n    }\n\n    if (value === '' || value === 'null') {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    try {\n      return JSON.parse(decodeURIComponent(value));\n    } catch (_unused) {\n      return value;\n    }\n  }\n\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n  }\n\n  const Manipulator = {\n    setDataAttribute(element, key, value) {\n      element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n    },\n\n    removeDataAttribute(element, key) {\n      element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n    },\n\n    getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n\n      const attributes = {};\n      const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'));\n\n      for (const key of bsKeys) {\n        let pureKey = key.replace(/^bs/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(element.dataset[key]);\n      }\n\n      return attributes;\n    },\n\n    getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n    }\n\n  };\n\n  return Manipulator;\n\n}));\n//# sourceMappingURL=manipulator.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/dom/manipulator.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/selector-engine.js":
/*!***************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/selector-engine.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap selector-engine.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ../util/index */ \"./node_modules/bootstrap/js/dist/util/index.js\")) :\n  0;\n})(this, (function (index) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const SelectorEngine = {\n    find(selector, element = document.documentElement) {\n      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n\n    findOne(selector, element = document.documentElement) {\n      return Element.prototype.querySelector.call(element, selector);\n    },\n\n    children(element, selector) {\n      return [].concat(...element.children).filter(child => child.matches(selector));\n    },\n\n    parents(element, selector) {\n      const parents = [];\n      let ancestor = element.parentNode.closest(selector);\n\n      while (ancestor) {\n        parents.push(ancestor);\n        ancestor = ancestor.parentNode.closest(selector);\n      }\n\n      return parents;\n    },\n\n    prev(element, selector) {\n      let previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n\n    // TODO: this is now unused; remove later along with prev()\n    next(element, selector) {\n      let next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    },\n\n    focusableChildren(element) {\n      const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n      return this.find(focusables, element).filter(el => !index.isDisabled(el) && index.isVisible(el));\n    }\n\n  };\n\n  return SelectorEngine;\n\n}));\n//# sourceMappingURL=selector-engine.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/dom/selector-engine.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/modal.js":
/*!*************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/modal.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap modal.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./util/index */ \"./node_modules/bootstrap/js/dist/util/index.js\"), __webpack_require__(/*! ./dom/event-handler */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./dom/selector-engine */ \"./node_modules/bootstrap/js/dist/dom/selector-engine.js\"), __webpack_require__(/*! ./util/scrollbar */ \"./node_modules/bootstrap/js/dist/util/scrollbar.js\"), __webpack_require__(/*! ./base-component */ \"./node_modules/bootstrap/js/dist/base-component.js\"), __webpack_require__(/*! ./util/backdrop */ \"./node_modules/bootstrap/js/dist/util/backdrop.js\"), __webpack_require__(/*! ./util/focustrap */ \"./node_modules/bootstrap/js/dist/util/focustrap.js\"), __webpack_require__(/*! ./util/component-functions */ \"./node_modules/bootstrap/js/dist/util/component-functions.js\")) :\n  0;\n})(this, (function (index, EventHandler, SelectorEngine, ScrollBarHelper, BaseComponent, Backdrop, FocusTrap, componentFunctions) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  const SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n  const ScrollBarHelper__default = /*#__PURE__*/_interopDefaultLegacy(ScrollBarHelper);\n  const BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n  const Backdrop__default = /*#__PURE__*/_interopDefaultLegacy(Backdrop);\n  const FocusTrap__default = /*#__PURE__*/_interopDefaultLegacy(FocusTrap);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): modal.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const NAME = 'modal';\n  const DATA_KEY = 'bs.modal';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const ESCAPE_KEY = 'Escape';\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_RESIZE = `resize${EVENT_KEY}`;\n  const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`;\n  const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`;\n  const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const CLASS_NAME_OPEN = 'modal-open';\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_STATIC = 'modal-static';\n  const OPEN_SELECTOR = '.modal.show';\n  const SELECTOR_DIALOG = '.modal-dialog';\n  const SELECTOR_MODAL_BODY = '.modal-body';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]';\n  const Default = {\n    backdrop: true,\n    focus: true,\n    keyboard: true\n  };\n  const DefaultType = {\n    backdrop: '(boolean|string)',\n    focus: 'boolean',\n    keyboard: 'boolean'\n  };\n  /**\n   * Class definition\n   */\n\n  class Modal extends BaseComponent__default.default {\n    constructor(element, config) {\n      super(element, config);\n      this._dialog = SelectorEngine__default.default.findOne(SELECTOR_DIALOG, this._element);\n      this._backdrop = this._initializeBackDrop();\n      this._focustrap = this._initializeFocusTrap();\n      this._isShown = false;\n      this._isTransitioning = false;\n      this._scrollBar = new ScrollBarHelper__default.default();\n\n      this._addEventListeners();\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    toggle(relatedTarget) {\n      return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n\n    show(relatedTarget) {\n      if (this._isShown || this._isTransitioning) {\n        return;\n      }\n\n      const showEvent = EventHandler__default.default.trigger(this._element, EVENT_SHOW, {\n        relatedTarget\n      });\n\n      if (showEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = true;\n      this._isTransitioning = true;\n\n      this._scrollBar.hide();\n\n      document.body.classList.add(CLASS_NAME_OPEN);\n\n      this._adjustDialog();\n\n      this._backdrop.show(() => this._showElement(relatedTarget));\n    }\n\n    hide() {\n      if (!this._isShown || this._isTransitioning) {\n        return;\n      }\n\n      const hideEvent = EventHandler__default.default.trigger(this._element, EVENT_HIDE);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = false;\n      this._isTransitioning = true;\n\n      this._focustrap.deactivate();\n\n      this._element.classList.remove(CLASS_NAME_SHOW);\n\n      this._queueCallback(() => this._hideModal(), this._element, this._isAnimated());\n    }\n\n    dispose() {\n      for (const htmlElement of [window, this._dialog]) {\n        EventHandler__default.default.off(htmlElement, EVENT_KEY);\n      }\n\n      this._backdrop.dispose();\n\n      this._focustrap.deactivate();\n\n      super.dispose();\n    }\n\n    handleUpdate() {\n      this._adjustDialog();\n    } // Private\n\n\n    _initializeBackDrop() {\n      return new Backdrop__default.default({\n        isVisible: Boolean(this._config.backdrop),\n        // 'static' option will be translated to true, and booleans will keep their value,\n        isAnimated: this._isAnimated()\n      });\n    }\n\n    _initializeFocusTrap() {\n      return new FocusTrap__default.default({\n        trapElement: this._element\n      });\n    }\n\n    _showElement(relatedTarget) {\n      // try to append dynamic modal\n      if (!document.body.contains(this._element)) {\n        document.body.append(this._element);\n      }\n\n      this._element.style.display = 'block';\n\n      this._element.removeAttribute('aria-hidden');\n\n      this._element.setAttribute('aria-modal', true);\n\n      this._element.setAttribute('role', 'dialog');\n\n      this._element.scrollTop = 0;\n      const modalBody = SelectorEngine__default.default.findOne(SELECTOR_MODAL_BODY, this._dialog);\n\n      if (modalBody) {\n        modalBody.scrollTop = 0;\n      }\n\n      index.reflow(this._element);\n\n      this._element.classList.add(CLASS_NAME_SHOW);\n\n      const transitionComplete = () => {\n        if (this._config.focus) {\n          this._focustrap.activate();\n        }\n\n        this._isTransitioning = false;\n        EventHandler__default.default.trigger(this._element, EVENT_SHOWN, {\n          relatedTarget\n        });\n      };\n\n      this._queueCallback(transitionComplete, this._dialog, this._isAnimated());\n    }\n\n    _addEventListeners() {\n      EventHandler__default.default.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (event.key !== ESCAPE_KEY) {\n          return;\n        }\n\n        if (this._config.keyboard) {\n          event.preventDefault();\n          this.hide();\n          return;\n        }\n\n        this._triggerBackdropTransition();\n      });\n      EventHandler__default.default.on(window, EVENT_RESIZE, () => {\n        if (this._isShown && !this._isTransitioning) {\n          this._adjustDialog();\n        }\n      });\n      EventHandler__default.default.on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {\n        // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n        EventHandler__default.default.one(this._element, EVENT_CLICK_DISMISS, event2 => {\n          if (this._element !== event.target || this._element !== event2.target) {\n            return;\n          }\n\n          if (this._config.backdrop === 'static') {\n            this._triggerBackdropTransition();\n\n            return;\n          }\n\n          if (this._config.backdrop) {\n            this.hide();\n          }\n        });\n      });\n    }\n\n    _hideModal() {\n      this._element.style.display = 'none';\n\n      this._element.setAttribute('aria-hidden', true);\n\n      this._element.removeAttribute('aria-modal');\n\n      this._element.removeAttribute('role');\n\n      this._isTransitioning = false;\n\n      this._backdrop.hide(() => {\n        document.body.classList.remove(CLASS_NAME_OPEN);\n\n        this._resetAdjustments();\n\n        this._scrollBar.reset();\n\n        EventHandler__default.default.trigger(this._element, EVENT_HIDDEN);\n      });\n    }\n\n    _isAnimated() {\n      return this._element.classList.contains(CLASS_NAME_FADE);\n    }\n\n    _triggerBackdropTransition() {\n      const hideEvent = EventHandler__default.default.trigger(this._element, EVENT_HIDE_PREVENTED);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n      const initialOverflowY = this._element.style.overflowY; // return if the following background transition hasn't yet completed\n\n      if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n        return;\n      }\n\n      if (!isModalOverflowing) {\n        this._element.style.overflowY = 'hidden';\n      }\n\n      this._element.classList.add(CLASS_NAME_STATIC);\n\n      this._queueCallback(() => {\n        this._element.classList.remove(CLASS_NAME_STATIC);\n\n        this._queueCallback(() => {\n          this._element.style.overflowY = initialOverflowY;\n        }, this._dialog);\n      }, this._dialog);\n\n      this._element.focus();\n    }\n    /**\n     * The following methods are used to handle overflowing modals\n     */\n\n\n    _adjustDialog() {\n      const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n      const scrollbarWidth = this._scrollBar.getWidth();\n\n      const isBodyOverflowing = scrollbarWidth > 0;\n\n      if (isBodyOverflowing && !isModalOverflowing) {\n        const property = index.isRTL() ? 'paddingLeft' : 'paddingRight';\n        this._element.style[property] = `${scrollbarWidth}px`;\n      }\n\n      if (!isBodyOverflowing && isModalOverflowing) {\n        const property = index.isRTL() ? 'paddingRight' : 'paddingLeft';\n        this._element.style[property] = `${scrollbarWidth}px`;\n      }\n    }\n\n    _resetAdjustments() {\n      this._element.style.paddingLeft = '';\n      this._element.style.paddingRight = '';\n    } // Static\n\n\n    static jQueryInterface(config, relatedTarget) {\n      return this.each(function () {\n        const data = Modal.getOrCreateInstance(this, config);\n\n        if (typeof config !== 'string') {\n          return;\n        }\n\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config](relatedTarget);\n      });\n    }\n\n  }\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler__default.default.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    const target = index.getElementFromSelector(this);\n\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n\n    EventHandler__default.default.one(target, EVENT_SHOW, showEvent => {\n      if (showEvent.defaultPrevented) {\n        // only register focus restorer if modal will actually get shown\n        return;\n      }\n\n      EventHandler__default.default.one(target, EVENT_HIDDEN, () => {\n        if (index.isVisible(this)) {\n          this.focus();\n        }\n      });\n    }); // avoid conflict when clicking modal toggler while another one is open\n\n    const alreadyOpen = SelectorEngine__default.default.findOne(OPEN_SELECTOR);\n\n    if (alreadyOpen) {\n      Modal.getInstance(alreadyOpen).hide();\n    }\n\n    const data = Modal.getOrCreateInstance(target);\n    data.toggle(this);\n  });\n  componentFunctions.enableDismissTrigger(Modal);\n  /**\n   * jQuery\n   */\n\n  index.defineJQueryPlugin(Modal);\n\n  return Modal;\n\n}));\n//# sourceMappingURL=modal.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/modal.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/util/backdrop.js":
/*!*********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/util/backdrop.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap backdrop.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ../dom/event-handler */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./index */ \"./node_modules/bootstrap/js/dist/util/index.js\"), __webpack_require__(/*! ./config */ \"./node_modules/bootstrap/js/dist/util/config.js\")) :\n  0;\n})(this, (function (EventHandler, index, Config) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/backdrop.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const NAME = 'backdrop';\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_SHOW = 'show';\n  const EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`;\n  const Default = {\n    className: 'modal-backdrop',\n    clickCallback: null,\n    isAnimated: false,\n    isVisible: true,\n    // if false, we use the backdrop helper without adding any element to the dom\n    rootElement: 'body' // give the choice to place backdrop under different elements\n\n  };\n  const DefaultType = {\n    className: 'string',\n    clickCallback: '(function|null)',\n    isAnimated: 'boolean',\n    isVisible: 'boolean',\n    rootElement: '(element|string)'\n  };\n  /**\n   * Class definition\n   */\n\n  class Backdrop extends Config__default.default {\n    constructor(config) {\n      super();\n      this._config = this._getConfig(config);\n      this._isAppended = false;\n      this._element = null;\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    show(callback) {\n      if (!this._config.isVisible) {\n        index.execute(callback);\n        return;\n      }\n\n      this._append();\n\n      const element = this._getElement();\n\n      if (this._config.isAnimated) {\n        index.reflow(element);\n      }\n\n      element.classList.add(CLASS_NAME_SHOW);\n\n      this._emulateAnimation(() => {\n        index.execute(callback);\n      });\n    }\n\n    hide(callback) {\n      if (!this._config.isVisible) {\n        index.execute(callback);\n        return;\n      }\n\n      this._getElement().classList.remove(CLASS_NAME_SHOW);\n\n      this._emulateAnimation(() => {\n        this.dispose();\n        index.execute(callback);\n      });\n    }\n\n    dispose() {\n      if (!this._isAppended) {\n        return;\n      }\n\n      EventHandler__default.default.off(this._element, EVENT_MOUSEDOWN);\n\n      this._element.remove();\n\n      this._isAppended = false;\n    } // Private\n\n\n    _getElement() {\n      if (!this._element) {\n        const backdrop = document.createElement('div');\n        backdrop.className = this._config.className;\n\n        if (this._config.isAnimated) {\n          backdrop.classList.add(CLASS_NAME_FADE);\n        }\n\n        this._element = backdrop;\n      }\n\n      return this._element;\n    }\n\n    _configAfterMerge(config) {\n      // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n      config.rootElement = index.getElement(config.rootElement);\n      return config;\n    }\n\n    _append() {\n      if (this._isAppended) {\n        return;\n      }\n\n      const element = this._getElement();\n\n      this._config.rootElement.append(element);\n\n      EventHandler__default.default.on(element, EVENT_MOUSEDOWN, () => {\n        index.execute(this._config.clickCallback);\n      });\n      this._isAppended = true;\n    }\n\n    _emulateAnimation(callback) {\n      index.executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n    }\n\n  }\n\n  return Backdrop;\n\n}));\n//# sourceMappingURL=backdrop.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/util/backdrop.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/util/component-functions.js":
/*!********************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/util/component-functions.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("/*!\n  * Bootstrap component-functions.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? factory(exports, __webpack_require__(/*! ../dom/event-handler */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./index */ \"./node_modules/bootstrap/js/dist/util/index.js\")) :\n  0;\n})(this, (function (exports, EventHandler, index) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/component-functions.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  const enableDismissTrigger = (component, method = 'hide') => {\n    const clickEvent = `click.dismiss${component.EVENT_KEY}`;\n    const name = component.NAME;\n    EventHandler__default.default.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n      if (['A', 'AREA'].includes(this.tagName)) {\n        event.preventDefault();\n      }\n\n      if (index.isDisabled(this)) {\n        return;\n      }\n\n      const target = index.getElementFromSelector(this) || this.closest(`.${name}`);\n      const instance = component.getOrCreateInstance(target); // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n\n      instance[method]();\n    });\n  };\n\n  exports.enableDismissTrigger = enableDismissTrigger;\n\n  Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: 'Module' } });\n\n}));\n//# sourceMappingURL=component-functions.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/util/component-functions.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/util/config.js":
/*!*******************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/util/config.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap config.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./index */ \"./node_modules/bootstrap/js/dist/util/index.js\"), __webpack_require__(/*! ../dom/manipulator */ \"./node_modules/bootstrap/js/dist/dom/manipulator.js\")) :\n  0;\n})(this, (function (index, Manipulator) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/config.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Class definition\n   */\n\n  class Config {\n    // Getters\n    static get Default() {\n      return {};\n    }\n\n    static get DefaultType() {\n      return {};\n    }\n\n    static get NAME() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    }\n\n    _configAfterMerge(config) {\n      return config;\n    }\n\n    _mergeConfigObj(config, element) {\n      const jsonConfig = index.isElement(element) ? Manipulator__default.default.getDataAttribute(element, 'config') : {}; // try to parse\n\n      return { ...this.constructor.Default,\n        ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n        ...(index.isElement(element) ? Manipulator__default.default.getDataAttributes(element) : {}),\n        ...(typeof config === 'object' ? config : {})\n      };\n    }\n\n    _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n      for (const property of Object.keys(configTypes)) {\n        const expectedTypes = configTypes[property];\n        const value = config[property];\n        const valueType = index.isElement(value) ? 'element' : index.toType(value);\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n        }\n      }\n    }\n\n  }\n\n  return Config;\n\n}));\n//# sourceMappingURL=config.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/util/config.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/util/focustrap.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/util/focustrap.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap focustrap.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ../dom/event-handler */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ../dom/selector-engine */ \"./node_modules/bootstrap/js/dist/dom/selector-engine.js\"), __webpack_require__(/*! ./config */ \"./node_modules/bootstrap/js/dist/util/config.js\")) :\n  0;\n})(this, (function (EventHandler, SelectorEngine, Config) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  const SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/focustrap.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const NAME = 'focustrap';\n  const DATA_KEY = 'bs.focustrap';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\n  const EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`;\n  const TAB_KEY = 'Tab';\n  const TAB_NAV_FORWARD = 'forward';\n  const TAB_NAV_BACKWARD = 'backward';\n  const Default = {\n    autofocus: true,\n    trapElement: null // The element to trap focus inside of\n\n  };\n  const DefaultType = {\n    autofocus: 'boolean',\n    trapElement: 'element'\n  };\n  /**\n   * Class definition\n   */\n\n  class FocusTrap extends Config__default.default {\n    constructor(config) {\n      super();\n      this._config = this._getConfig(config);\n      this._isActive = false;\n      this._lastTabNavDirection = null;\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    activate() {\n      if (this._isActive) {\n        return;\n      }\n\n      if (this._config.autofocus) {\n        this._config.trapElement.focus();\n      }\n\n      EventHandler__default.default.off(document, EVENT_KEY); // guard against infinite focus loop\n\n      EventHandler__default.default.on(document, EVENT_FOCUSIN, event => this._handleFocusin(event));\n      EventHandler__default.default.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));\n      this._isActive = true;\n    }\n\n    deactivate() {\n      if (!this._isActive) {\n        return;\n      }\n\n      this._isActive = false;\n      EventHandler__default.default.off(document, EVENT_KEY);\n    } // Private\n\n\n    _handleFocusin(event) {\n      const {\n        trapElement\n      } = this._config;\n\n      if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n        return;\n      }\n\n      const elements = SelectorEngine__default.default.focusableChildren(trapElement);\n\n      if (elements.length === 0) {\n        trapElement.focus();\n      } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n        elements[elements.length - 1].focus();\n      } else {\n        elements[0].focus();\n      }\n    }\n\n    _handleKeydown(event) {\n      if (event.key !== TAB_KEY) {\n        return;\n      }\n\n      this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;\n    }\n\n  }\n\n  return FocusTrap;\n\n}));\n//# sourceMappingURL=focustrap.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/util/focustrap.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/util/index.js":
/*!******************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/util/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("/*!\n  * Bootstrap index.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? factory(exports) :\n  0;\n})(this, (function (exports) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  const MAX_UID = 1000000;\n  const MILLISECONDS_MULTIPLIER = 1000;\n  const TRANSITION_END = 'transitionend'; // Shout-out Angus Croll (https://goo.gl/pxwQGp)\n\n  const toType = object => {\n    if (object === null || object === undefined) {\n      return `${object}`;\n    }\n\n    return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n  /**\n   * Public Util API\n   */\n\n\n  const getUID = prefix => {\n    do {\n      prefix += Math.floor(Math.random() * MAX_UID);\n    } while (document.getElementById(prefix));\n\n    return prefix;\n  };\n\n  const getSelector = element => {\n    let selector = element.getAttribute('data-bs-target');\n\n    if (!selector || selector === '#') {\n      let hrefAttribute = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,\n      // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n      // `document.querySelector` will rightfully complain it is invalid.\n      // See https://github.com/twbs/bootstrap/issues/32273\n\n      if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {\n        return null;\n      } // Just in case some CMS puts out a full URL with the anchor appended\n\n\n      if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n        hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n      }\n\n      selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;\n    }\n\n    return selector;\n  };\n\n  const getSelectorFromElement = element => {\n    const selector = getSelector(element);\n\n    if (selector) {\n      return document.querySelector(selector) ? selector : null;\n    }\n\n    return null;\n  };\n\n  const getElementFromSelector = element => {\n    const selector = getSelector(element);\n    return selector ? document.querySelector(selector) : null;\n  };\n\n  const getTransitionDurationFromElement = element => {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    let {\n      transitionDuration,\n      transitionDelay\n    } = window.getComputedStyle(element);\n    const floatTransitionDuration = Number.parseFloat(transitionDuration);\n    const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n\n  const triggerTransitionEnd = element => {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n\n  const isElement = object => {\n    if (!object || typeof object !== 'object') {\n      return false;\n    }\n\n    if (typeof object.jquery !== 'undefined') {\n      object = object[0];\n    }\n\n    return typeof object.nodeType !== 'undefined';\n  };\n\n  const getElement = object => {\n    // it's a jQuery object or a node element\n    if (isElement(object)) {\n      return object.jquery ? object[0] : object;\n    }\n\n    if (typeof object === 'string' && object.length > 0) {\n      return document.querySelector(object);\n    }\n\n    return null;\n  };\n\n  const isVisible = element => {\n    if (!isElement(element) || element.getClientRects().length === 0) {\n      return false;\n    }\n\n    const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'; // Handle `details` element as its content may falsie appear visible when it is closed\n\n    const closedDetails = element.closest('details:not([open])');\n\n    if (!closedDetails) {\n      return elementIsVisible;\n    }\n\n    if (closedDetails !== element) {\n      const summary = element.closest('summary');\n\n      if (summary && summary.parentNode !== closedDetails) {\n        return false;\n      }\n\n      if (summary === null) {\n        return false;\n      }\n    }\n\n    return elementIsVisible;\n  };\n\n  const isDisabled = element => {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n\n    if (element.classList.contains('disabled')) {\n      return true;\n    }\n\n    if (typeof element.disabled !== 'undefined') {\n      return element.disabled;\n    }\n\n    return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n  };\n\n  const findShadowRoot = element => {\n    if (!document.documentElement.attachShadow) {\n      return null;\n    } // Can find the shadow root otherwise it'll return the document\n\n\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode();\n      return root instanceof ShadowRoot ? root : null;\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element;\n    } // when we don't find a shadow root\n\n\n    if (!element.parentNode) {\n      return null;\n    }\n\n    return findShadowRoot(element.parentNode);\n  };\n\n  const noop = () => {};\n  /**\n   * Trick to restart an element's animation\n   *\n   * @param {HTMLElement} element\n   * @return void\n   *\n   * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n   */\n\n\n  const reflow = element => {\n    element.offsetHeight; // eslint-disable-line no-unused-expressions\n  };\n\n  const getjQuery = () => {\n    if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return window.jQuery;\n    }\n\n    return null;\n  };\n\n  const DOMContentLoadedCallbacks = [];\n\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      // add listener on the first call when the document is in loading state\n      if (!DOMContentLoadedCallbacks.length) {\n        document.addEventListener('DOMContentLoaded', () => {\n          for (const callback of DOMContentLoadedCallbacks) {\n            callback();\n          }\n        });\n      }\n\n      DOMContentLoadedCallbacks.push(callback);\n    } else {\n      callback();\n    }\n  };\n\n  const isRTL = () => document.documentElement.dir === 'rtl';\n\n  const defineJQueryPlugin = plugin => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        const name = plugin.NAME;\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n\n  const execute = callback => {\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n\n  const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n    if (!waitForTransition) {\n      execute(callback);\n      return;\n    }\n\n    const durationPadding = 5;\n    const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n    let called = false;\n\n    const handler = ({\n      target\n    }) => {\n      if (target !== transitionElement) {\n        return;\n      }\n\n      called = true;\n      transitionElement.removeEventListener(TRANSITION_END, handler);\n      execute(callback);\n    };\n\n    transitionElement.addEventListener(TRANSITION_END, handler);\n    setTimeout(() => {\n      if (!called) {\n        triggerTransitionEnd(transitionElement);\n      }\n    }, emulatedDuration);\n  };\n  /**\n   * Return the previous/next element of a list.\n   *\n   * @param {array} list    The list of elements\n   * @param activeElement   The active element\n   * @param shouldGetNext   Choose to get next or previous element\n   * @param isCycleAllowed\n   * @return {Element|elem} The proper element\n   */\n\n\n  const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n    const listLength = list.length;\n    let index = list.indexOf(activeElement); // if the element does not exist in the list return an element\n    // depending on the direction and if cycle is allowed\n\n    if (index === -1) {\n      return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n    }\n\n    index += shouldGetNext ? 1 : -1;\n\n    if (isCycleAllowed) {\n      index = (index + listLength) % listLength;\n    }\n\n    return list[Math.max(0, Math.min(index, listLength - 1))];\n  };\n\n  exports.defineJQueryPlugin = defineJQueryPlugin;\n  exports.execute = execute;\n  exports.executeAfterTransition = executeAfterTransition;\n  exports.findShadowRoot = findShadowRoot;\n  exports.getElement = getElement;\n  exports.getElementFromSelector = getElementFromSelector;\n  exports.getNextActiveElement = getNextActiveElement;\n  exports.getSelectorFromElement = getSelectorFromElement;\n  exports.getTransitionDurationFromElement = getTransitionDurationFromElement;\n  exports.getUID = getUID;\n  exports.getjQuery = getjQuery;\n  exports.isDisabled = isDisabled;\n  exports.isElement = isElement;\n  exports.isRTL = isRTL;\n  exports.isVisible = isVisible;\n  exports.noop = noop;\n  exports.onDOMContentLoaded = onDOMContentLoaded;\n  exports.reflow = reflow;\n  exports.toType = toType;\n  exports.triggerTransitionEnd = triggerTransitionEnd;\n\n  Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: 'Module' } });\n\n}));\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/util/index.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/util/scrollbar.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/util/scrollbar.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap scrollbar.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ../dom/selector-engine */ \"./node_modules/bootstrap/js/dist/dom/selector-engine.js\"), __webpack_require__(/*! ../dom/manipulator */ \"./node_modules/bootstrap/js/dist/dom/manipulator.js\"), __webpack_require__(/*! ./index */ \"./node_modules/bootstrap/js/dist/util/index.js\")) :\n  0;\n})(this, (function (SelectorEngine, Manipulator, index) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n  const Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/scrollBar.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\n  const SELECTOR_STICKY_CONTENT = '.sticky-top';\n  const PROPERTY_PADDING = 'padding-right';\n  const PROPERTY_MARGIN = 'margin-right';\n  /**\n   * Class definition\n   */\n\n  class ScrollBarHelper {\n    constructor() {\n      this._element = document.body;\n    } // Public\n\n\n    getWidth() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n      const documentWidth = document.documentElement.clientWidth;\n      return Math.abs(window.innerWidth - documentWidth);\n    }\n\n    hide() {\n      const width = this.getWidth();\n\n      this._disableOverFlow(); // give padding to element to balance the hidden scrollbar width\n\n\n      this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width); // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n\n\n      this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width);\n\n      this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width);\n    }\n\n    reset() {\n      this._resetElementAttributes(this._element, 'overflow');\n\n      this._resetElementAttributes(this._element, PROPERTY_PADDING);\n\n      this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);\n\n      this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);\n    }\n\n    isOverflowing() {\n      return this.getWidth() > 0;\n    } // Private\n\n\n    _disableOverFlow() {\n      this._saveInitialAttribute(this._element, 'overflow');\n\n      this._element.style.overflow = 'hidden';\n    }\n\n    _setElementAttributes(selector, styleProperty, callback) {\n      const scrollbarWidth = this.getWidth();\n\n      const manipulationCallBack = element => {\n        if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n          return;\n        }\n\n        this._saveInitialAttribute(element, styleProperty);\n\n        const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n        element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);\n      };\n\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n\n    _saveInitialAttribute(element, styleProperty) {\n      const actualValue = element.style.getPropertyValue(styleProperty);\n\n      if (actualValue) {\n        Manipulator__default.default.setDataAttribute(element, styleProperty, actualValue);\n      }\n    }\n\n    _resetElementAttributes(selector, styleProperty) {\n      const manipulationCallBack = element => {\n        const value = Manipulator__default.default.getDataAttribute(element, styleProperty); // We only want to remove the property if the value is `null`; the value can also be zero\n\n        if (value === null) {\n          element.style.removeProperty(styleProperty);\n          return;\n        }\n\n        Manipulator__default.default.removeDataAttribute(element, styleProperty);\n        element.style.setProperty(styleProperty, value);\n      };\n\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n\n    _applyManipulationCallback(selector, callBack) {\n      if (index.isElement(selector)) {\n        callBack(selector);\n        return;\n      }\n\n      for (const sel of SelectorEngine__default.default.find(selector, this._element)) {\n        callBack(sel);\n      }\n    }\n\n  }\n\n  return ScrollBarHelper;\n\n}));\n//# sourceMappingURL=scrollbar.js.map\n\n\n//# sourceURL=webpack://blackjack/./node_modules/bootstrap/js/dist/util/scrollbar.js?");

/***/ }),

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst blackJackController_1 = __webpack_require__(/*! ./controllers/blackJackController */ \"./src/controllers/blackJackController.ts\");\nnew blackJackController_1.Controller();\n\n\n//# sourceURL=webpack://blackjack/./src/app.ts?");

/***/ }),

/***/ "./src/config/blackJackConfig.ts":
/*!***************************************!*\
  !*** ./src/config/blackJackConfig.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlackJackCardConfig = void 0;\nclass BlackJackCardConfig {\n}\nexports.BlackJackCardConfig = BlackJackCardConfig;\nBlackJackCardConfig.suits = [\"H\", \"D\", \"C\", \"S\"];\nBlackJackCardConfig.rank = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\nBlackJackCardConfig.faceCard = [\"J\", \"Q\", \"K\"];\n\n\n//# sourceURL=webpack://blackjack/./src/config/blackJackConfig.ts?");

/***/ }),

/***/ "./src/controllers/blackJackController.ts":
/*!************************************************!*\
  !*** ./src/controllers/blackJackController.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Controller = void 0;\nconst tableModel_1 = __webpack_require__(/*! ../models/tableModel */ \"./src/models/tableModel.ts\");\nconst blackJackViews_1 = __webpack_require__(/*! ../views/blackJackViews */ \"./src/views/blackJackViews.ts\");\nconst modal_1 = __importDefault(__webpack_require__(/*! bootstrap/js/dist/modal */ \"./node_modules/bootstrap/js/dist/modal.js\"));\nclass Controller {\n    constructor() {\n        blackJackViews_1.View.createInitialPage();\n        this.startBtn();\n    }\n    startGame(name, gameType) {\n        if (gameType === \"blackjack\") {\n            let table = new tableModel_1.BlackJackTable(name);\n            this.renderTable(table);\n        }\n    }\n    startBtn() {\n        let gameStartBtn = document.getElementById(\"gameStartBtn\");\n        //inputされたuserNameとgameTypeを取得\n        gameStartBtn === null || gameStartBtn === void 0 ? void 0 : gameStartBtn.addEventListener(\"click\", () => {\n            let userName = document.getElementById(\"userName\");\n            let gameType = document.getElementsByName(\"gameType\");\n            if (userName.value === \"\") {\n                alert(\"Please Input Name\");\n            }\n            else {\n                //radioで選択している要素の検索\n                for (let i = 0; i < gameType.length; i++) {\n                    let gameName = gameType.item(i);\n                    if (gameName.checked) {\n                        this.startGame(userName.value, gameName.value);\n                    }\n                }\n            }\n        });\n    }\n    renderTable(table) {\n        if (table.gamePhase === \"gameOver\") {\n            blackJackViews_1.View.displayResult(table.players[1]);\n            blackJackViews_1.View.createNewGameBtn(table.players[1].chips);\n            blackJackViews_1.View.createGameOverModal();\n            let modal = new modal_1.default(document.getElementById(\"gameovermodal\"));\n            modal.show();\n            this.moveInitialPageBtn();\n            return;\n        }\n        else if (table.gamePhase === \"roundOver\") {\n            blackJackViews_1.View.displayResult(table.players[1]);\n            blackJackViews_1.View.createNewGameBtn(table.players[1].chips);\n            blackJackViews_1.View.createResultModal(table);\n            let modal = new modal_1.default(document.getElementById(\"resultmodal\"));\n            modal.show();\n            this.moveNextRoundBtn(table);\n            return;\n        }\n        let page = document.getElementById(\"root\");\n        page.innerHTML = \"\";\n        blackJackViews_1.View.createMainPage(table);\n        if (table.gamePhase === \"acting\") {\n            blackJackViews_1.View.faceDownCard(table);\n        }\n        else if (table.gamePhase === \"evaluatingWinners\") {\n            blackJackViews_1.View.faceUpCard(table);\n        }\n        //userの時はbet,actionViewを表示して入力を待ってからrender\n        if (table.getTurnPlayer().playerType === \"user\") {\n            if (table.gamePhase === \"betting\") {\n                blackJackViews_1.View.createBetPhase(table);\n                this.chipBtn(table);\n                this.betBtn(table);\n                this.resetBetBtn(table);\n                return;\n            }\n            else if (table.gamePhase === \"acting\" && (table.getTurnPlayer().status === \"wait\" || table.getTurnPlayer().status === \"hit\")) {\n                if (table.getTurnPlayer().getHandScore() === 21) {\n                    table.getTurnPlayer().status === \"blackjack\";\n                }\n                else {\n                    blackJackViews_1.View.createActionPhase(table);\n                    this.actionBtn(table);\n                    if (table.turnCounter > 5) {\n                        blackJackViews_1.View.disabledSecondActionBtn(table);\n                    }\n                    return;\n                }\n            }\n        }\n        setTimeout(() => {\n            table.haveTurn();\n            this.renderTable(table);\n        }, 1500);\n    }\n    getBetAmount(table) {\n        table.haveTurn(table.getTurnPlayer().betAmount);\n        this.renderTable(table);\n    }\n    betBtn(table) {\n        var _a;\n        let betBtn = (_a = document.getElementById(\"betbtn\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", () => {\n            this.getBetAmount(table);\n        });\n    }\n    chipBtn(table) {\n        for (let chip of table.betDenominations) {\n            let chipBtn = document.getElementById(`${chip}`);\n            chipBtn === null || chipBtn === void 0 ? void 0 : chipBtn.addEventListener(\"click\", () => {\n                let okbtn = document.getElementById(\"betbtn\");\n                okbtn.disabled = false;\n                table.getTurnPlayer().betAmount += chip;\n                this.disabledBetBtn(table);\n            });\n        }\n    }\n    resetBetBtn(table) {\n        var _a;\n        let resetBetBtn = (_a = document.getElementById(\"resetbetbtn\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", () => {\n            var _a;\n            table.getTurnPlayer().betAmount = 0;\n            document.querySelectorAll(\"#betamount\")[0].innerHTML = `<h4>You Bet ${table.getTurnPlayer().betAmount}</h4>`;\n            let okbtn = document.getElementById(\"betbtn\");\n            okbtn.disabled = true;\n            let betBtns = (_a = document.querySelector(\"#chips\")) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\"button\");\n            for (let betBtn of betBtns) {\n                betBtn.disabled = false;\n            }\n        });\n    }\n    disabledBetBtn(table) {\n        var _a;\n        let betBtns = (_a = document.querySelector(\"#chips\")) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\"button\");\n        for (let betBtn of betBtns) {\n            let curr = betBtn;\n            if (table.getTurnPlayer().betAmount + parseInt(curr.value) > table.getTurnPlayer().chips) {\n                betBtn.disabled = true;\n            }\n        }\n    }\n    actionBtn(table) {\n        for (let action of table.getTurnPlayer().actions) {\n            let actionBtn = document.getElementById(`${action}`);\n            actionBtn === null || actionBtn === void 0 ? void 0 : actionBtn.addEventListener(\"click\", () => {\n                table.haveTurn(action);\n                this.renderTable(table);\n            });\n        }\n    }\n    moveNextRoundBtn(table) {\n        var _a;\n        let moveNextRoundBtn = (_a = document.getElementById(\"Next\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", () => {\n            table.blackjackClearPlayerHandsAndBets();\n            this.renderTable(table);\n        });\n    }\n    moveInitialPageBtn() {\n        var _a;\n        let moveInitialPageBtn = (_a = document.getElementById(\"New\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", () => {\n            document.querySelectorAll(\"#root\")[0].innerHTML = \"\";\n            new Controller();\n        });\n    }\n}\nexports.Controller = Controller;\n\n\n//# sourceURL=webpack://blackjack/./src/controllers/blackJackController.ts?");

/***/ }),

/***/ "./src/models/cardModel.ts":
/*!*********************************!*\
  !*** ./src/models/cardModel.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlackJackCard = void 0;\nconst blackJackConfig_1 = __webpack_require__(/*! ../config/blackJackConfig */ \"./src/config/blackJackConfig.ts\");\nclass BlackJackCard {\n    constructor(suit, rank) {\n        this.suit = suit;\n        this.rank = rank;\n    }\n    getRankNumber() {\n        if (this.rank === \"A\")\n            return 11;\n        else if (blackJackConfig_1.BlackJackCardConfig.faceCard.includes(this.rank)) {\n            return 10;\n        }\n        else {\n            return parseInt(this.rank);\n        }\n    }\n}\nexports.BlackJackCard = BlackJackCard;\n\n\n//# sourceURL=webpack://blackjack/./src/models/cardModel.ts?");

/***/ }),

/***/ "./src/models/deckModel.ts":
/*!*********************************!*\
  !*** ./src/models/deckModel.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlackJackDeck = void 0;\nconst blackJackConfig_1 = __webpack_require__(/*! ../config/blackJackConfig */ \"./src/config/blackJackConfig.ts\");\nconst cardModel_1 = __webpack_require__(/*! ./cardModel */ \"./src/models/cardModel.ts\");\nclass BlackJackDeck {\n    constructor(gameType) {\n        this.gameType = gameType;\n        this.cards = [];\n        this.resetDeck();\n    }\n    resetDeck() {\n        for (let suit of blackJackConfig_1.BlackJackCardConfig.suits) {\n            for (let rank of blackJackConfig_1.BlackJackCardConfig.rank) {\n                this.cards = [...this.cards, new cardModel_1.BlackJackCard(suit, rank)];\n            }\n        }\n        this.shuffle();\n    }\n    shuffle() {\n        for (let i = this.cards.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n        }\n    }\n    drawOne() {\n        return this.cards.pop();\n    }\n}\nexports.BlackJackDeck = BlackJackDeck;\n\n\n//# sourceURL=webpack://blackjack/./src/models/deckModel.ts?");

/***/ }),

/***/ "./src/models/playerModel.ts":
/*!***********************************!*\
  !*** ./src/models/playerModel.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GameDecision = exports.BlackJackPlayer = void 0;\nclass BlackJackPlayer {\n    constructor(name, playerType) {\n        this.name = name;\n        this.playerType = playerType;\n        this.gameType = \"blackjack\";\n        this.chips = 400;\n        this.betAmount = 0;\n        this.winAmount = 0;\n        this.hand = [];\n        this.status = \"bet\";\n        this.isGameOver = false;\n        this.actions = [\"surrender\", \"stand\", \"hit\", \"double\"];\n        this.result = null;\n    }\n    promptPlayer(userData) {\n        if (this.status === \"bet\") {\n            if (this.playerType === \"house\") {\n                return new GameDecision(\"wait\");\n            }\n            else if (this.playerType === \"ai\") {\n                let bet = Math.floor(Math.random() * (this.chips / 2 / 5 - 1 / 5) + 1 / 5) * 5;\n                return new GameDecision(\"bet\", bet);\n            }\n            else {\n                return new GameDecision(\"bet\", userData);\n            }\n        }\n        else {\n            if (this.playerType === \"ai\" || this.playerType === \"house\") {\n                if (this.getHandScore() <= 17) {\n                    return new GameDecision(\"hit\");\n                }\n                else {\n                    return new GameDecision(\"stand\");\n                }\n            }\n            else {\n                return new GameDecision(userData);\n            }\n        }\n    }\n    getHandScore() {\n        let score = 0;\n        let sumOfAce = 0;\n        for (let card of this.hand) {\n            score += card.getRankNumber();\n            if (card.rank === \"A\") {\n                sumOfAce++;\n            }\n        }\n        while (score > 21 && sumOfAce > 0) {\n            score -= 10;\n            sumOfAce--;\n        }\n        return score;\n    }\n}\nexports.BlackJackPlayer = BlackJackPlayer;\nclass GameDecision {\n    constructor(action, amount) {\n        this.action = action;\n        this.amount = amount;\n    }\n}\nexports.GameDecision = GameDecision;\n\n\n//# sourceURL=webpack://blackjack/./src/models/playerModel.ts?");

/***/ }),

/***/ "./src/models/tableModel.ts":
/*!**********************************!*\
  !*** ./src/models/tableModel.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlackJackTable = void 0;\nconst deckModel_1 = __webpack_require__(/*! ./deckModel */ \"./src/models/deckModel.ts\");\nconst playerModel_1 = __webpack_require__(/*! ./playerModel */ \"./src/models/playerModel.ts\");\nclass BlackJackTable {\n    constructor(playerName) {\n        this.playerName = playerName;\n        this.gameType = \"blackjack\";\n        this.betDenominations = [5, 20, 50, 100];\n        this.deck = new deckModel_1.BlackJackDeck(this.gameType);\n        this.house = new playerModel_1.BlackJackPlayer(\"Dealer\", \"house\");\n        this.resultLog = [];\n        this.turnCounter = 0;\n        this.roundCounter = 1;\n        this.gamePhase = \"betting\";\n        this.players = [this.house];\n        this.setplayer(playerName);\n    }\n    setplayer(name) {\n        this.players.push(new playerModel_1.BlackJackPlayer(name, \"user\"));\n        this.players.push(new playerModel_1.BlackJackPlayer(\"AI1\", \"ai\"));\n        this.players.push(new playerModel_1.BlackJackPlayer(\"AI2\", \"ai\"));\n    }\n    evaluateMove(decision) {\n        //TODO: ここから挙動をコードしてください。\n        let player = this.getTurnPlayer();\n        if (player.getHandScore() === 21) {\n            player.status = \"blackjack\";\n            if (player.playerType === \"house\") {\n                player.status = \"stand\";\n            }\n            return;\n        }\n        if (decision.action === \"bet\") {\n            player.betAmount = decision.amount;\n            player.winAmount = decision.amount;\n            player.status = \"wait\";\n        }\n        else if (decision.action === \"hit\" || decision.action === \"double\") {\n            player.status = decision.action;\n            player.hand.push(this.deck.drawOne());\n            let currHandScore = player.getHandScore();\n            if (decision.action === \"double\") {\n                player.betAmount *= 2;\n                player.winAmount *= 2;\n            }\n            if (currHandScore === 21) {\n                player.status = \"blackjack\";\n            }\n            else if (currHandScore > 21) {\n                player.status = \"bust\";\n            }\n            if (player.playerType === \"house\") {\n                player.status = \"stand\";\n            }\n        }\n        else if (decision.action === \"surrender\") {\n            player.winAmount /= 2;\n            player.status = \"surrender\";\n        }\n        else if (decision.action === \"stand\") {\n            player.status = \"stand\";\n        }\n        else if (decision.action === \"wait\") {\n            player.status = \"wait\";\n        }\n    }\n    /*\n       return String : 新しいターンが始まる直前の全プレイヤーの状態を表す文字列。\n        NOTE: このメソッドの出力は、各ラウンドの終了時にテーブルのresultsLogメンバを更新するために使用されます。\n    */\n    blackjackEvaluateAndGetRoundResults() {\n        //TODO: ここから挙動をコードしてください。\n        alert(\"fff\");\n        for (let player of this.players) {\n            if (player.playerType === \"house\") {\n                if (player.getHandScore() > 21) {\n                    player.status = \"bust\";\n                }\n                else if (player.getHandScore() === 21) {\n                    player.status = \"blackjack\";\n                }\n                continue;\n            }\n            else {\n                if (player.status === \"surrender\") {\n                    player.chips -= player.winAmount;\n                    player.result = \"Lose\";\n                    this.resultLog.push(`${player.name} is surrender. Total chips: ${player.chips}.`);\n                }\n                else if (this.house.status === \"blackjack\") {\n                    if (player.status === \"blackjack\") {\n                        player.result = \"Push\";\n                        this.resultLog.push(`${player.name} is push. ${player.chips}.`);\n                    }\n                    else {\n                        player.chips -= player.betAmount;\n                        player.result = \"Lose\";\n                        this.resultLog.push(`${player.name} is lose -${player.betAmount} chips. Total chips: ${player.chips}.`);\n                    }\n                }\n                else if (this.house.status === \"bust\") {\n                    if (player.status !== \"bust\") {\n                        if (player.status === \"blackjack\") {\n                            player.chips = player.betAmount * 1.5 + player.chips;\n                        }\n                        else {\n                            player.chips += player.betAmount;\n                        }\n                        player.result = \"Win\";\n                        this.resultLog.push(`${player.name} is win +${player.betAmount} chips. Total chips: ${player.chips}.`);\n                    }\n                    else {\n                        player.result = \"Push\";\n                        this.resultLog.push(`${player.name} is push. Total chips: ${player.chips}.`);\n                    }\n                }\n                else {\n                    if (this.house.getHandScore() > player.getHandScore() || player.status === \"bust\") {\n                        player.chips -= player.betAmount;\n                        player.result = \"Lose\";\n                        this.resultLog.push(`${player.name} is lose -${player.betAmount} chips. Total chips: ${player.chips}.`);\n                    }\n                    else {\n                        if (player.status === \"blackjack\") {\n                            player.chips = player.betAmount * 1.5 + player.chips;\n                        }\n                        else {\n                            player.chips += player.betAmount;\n                        }\n                        player.result = \"Win\";\n                        this.resultLog.push(`${player.name} is win +${player.betAmount} chips. Total chips: ${player.chips}.`);\n                    }\n                }\n            }\n        }\n    }\n    /*\n       return null : デッキから2枚のカードを手札に加えることで、全プレイヤーの状態を更新します。\n       NOTE: プレイヤーのタイプが「ハウス」の場合は、別の処理を行う必要があります。\n    */\n    blackjackAssignPlayerHands() {\n        for (let player of this.players) {\n            if (player.playerType === \"house\") {\n                this.house.status === \"wait\";\n                player.hand.push(this.deck.drawOne());\n                let faceDownCard = player.hand[0].suit + player.hand[0].rank;\n                console.log(faceDownCard);\n                player.hand.push(this.deck.drawOne());\n            }\n            else {\n                player.hand.push(this.deck.drawOne());\n                player.hand.push(this.deck.drawOne());\n            }\n        }\n    }\n    /*\n       return null : テーブル内のすべてのプレイヤーの状態を更新し、手札を空の配列に、ベットを0に設定します。\n    */\n    blackjackClearPlayerHandsAndBets() {\n        //TODO: ここから挙動をコードしてください。\n        this.roundCounter += 1;\n        this.turnCounter = 0;\n        this.resultLog = [];\n        this.gamePhase = \"betting\";\n        this.deck = new deckModel_1.BlackJackDeck(\"blackjack\");\n        for (let player of this.players) {\n            player.status = \"bet\";\n            player.hand = [];\n            player.betAmount = 0;\n        }\n    }\n    /*\n       return Player : 現在のプレイヤー\n    */\n    getTurnPlayer() {\n        return this.players[this.turnCounter % this.players.length];\n    }\n    /*\n       Number userData : テーブルモデルの外部から渡されるデータです。\n       return Null : このメソッドはテーブルの状態を更新するだけで、値を返しません。\n    */\n    haveTurn(userData) {\n        //TODO: ここから挙動をコードしてください。\n        if (this.gamePhase === \"evaluatingWinners\" && this.players[1].chips > 0) {\n            this.gamePhase = \"roundOver\";\n            return;\n        }\n        else if (this.players[1].chips === 0) {\n            this.gamePhase = \"gameOver\";\n            return;\n        }\n        if (this.allPlayerActionsResolved()) {\n            this.gamePhase = \"evaluatingWinners\";\n            this.blackjackEvaluateAndGetRoundResults();\n        }\n        let currPlayer = this.getTurnPlayer();\n        if (!(currPlayer.status === \"blackjack\" || currPlayer.status === \"bust\")) {\n            this.evaluateMove(currPlayer.promptPlayer(userData));\n        }\n        if (this.onLastPlayer() && this.gamePhase === \"betting\") {\n            this.gamePhase = \"acting\";\n            this.blackjackAssignPlayerHands();\n        }\n        this.turnCounter++;\n    }\n    onFirstPlayer() {\n        return this.turnCounter % this.players.length === 0;\n    }\n    onLastPlayer() {\n        return this.turnCounter % this.players.length === this.players.length - 1;\n    }\n    /*\n        全てのプレイヤーがセット{'broken', 'bust', 'stand', 'surrender'}のgameStatusを持っていればtrueを返し、持っていなければfalseを返します。\n    */\n    allPlayerActionsResolved() {\n        let statusList = [\"broken\", \"surrender\", \"bust\", \"stand\", \"blackjack\", \"double\"];\n        for (let player of this.players) {\n            if (!statusList.includes(player.status)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.BlackJackTable = BlackJackTable;\n\n\n//# sourceURL=webpack://blackjack/./src/models/tableModel.ts?");

/***/ }),

/***/ "./src/views/blackJackViews.ts":
/*!*************************************!*\
  !*** ./src/views/blackJackViews.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.View = void 0;\nclass View {\n    static createInitialPage() {\n        var _a;\n        console.log(\"initial\");\n        let container = document.createElement(\"div\");\n        container.classList.add(\"vh-100\", \"d-flex\", \"flex-column\", \"justify-content-center\", \"align-items-center\", \"bg-success\", \"text-center\");\n        container.innerHTML = `\n        <h1>BlackJack & Poker llllllllll</h1>\n        <h3>Select Game and Input Your Name!</h3>\n        <div class=\"col-4 mt-4\">\n                <div class=\"radio\">\n                    <label>\n                        <input type=\"radio\" name=\"gameType\" value=\"blackjack\"> <span>BlackJack</span>\n                    </label>\n                </div>\n                <div class=\"radio mt-3\">\n                    <label>\n                        <input type=\"radio\" name=\"gameType\" value=\"poker\"> <span>Poker</span>\n                    </label>\n                </div>\n                <div class=\"my-4\">\n                    <input id=\"userName\" type=\"text\" class=\"form-control\" placeholder=\"Player Name\">\n                </div>\n        </div>\n        <div class=\"col-6\">\n            <p id=\"gameStartBtn\" class=\"dbtn\">Game Start</p>\n        </div>\n        `;\n        return (_a = document.getElementById(\"root\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static createMainPage(table) {\n        var _a;\n        let container = document.createElement(\"div\");\n        container.classList.add(\"vh-100\", \"bg-success\", \"d-flex\", \"justify-content-center\", \"align-items-center\");\n        container.innerHTML = `\n        <div class=\"col-12\">\n            <div class=\"pt-5 container\">\n                <h3 class=\"m-0 text-center text-white rem3\">Dealer</h3>\n                <p id=\"housestatus\" class=\"text-center\">status: ${table.house.status}</p>\n\n                <div id=\"${table.players[0].name}\" class=\"justify-content-center pt-3 pb-5 row\">\n                    <div class=\"col-3 justify-content-center row\">\n                        ${View.createCardView(table.players[0])}\n                    </div>\n                </div>\n\n                <div class=\"\">\n                    <div id=\"playersDiv\" class=\"d-flex justify-content-between\">\n                        \n                        <div id=\"${table.players[2]}\" class=\"col-3\">\n                            <h3 class=\"m-0 text-white text-center rem3\">${table.players[2].name}</h3>\n                            <p id=\"player2status\" class=\"text-center\">status: ${table.players[2].status}</p>\n                            <p class=\"text-center\">bet: ${table.players[2].betAmount}</p>\n                            <p class=\"text-center\">chip: ${table.players[2].chips}</p>\n                            <div class=\"d-flex justify-content-center row\">\n                                ${View.createCardView(table.players[2])}\n                            </div>\n                        </div>\n                        \n                        \n                        <div id=\"player1info\" class=\"col-3\">\n                            <h3 class=\"m-0 text-white text-center rem3\">${table.players[1].name}</h3>\n                            <p id=\"player1status\" class=\"text-center\">status: ${table.players[1].status}</p>\n                            <p class=\"text-center\">bet: ${table.players[1].betAmount}</p>\n                            <p class=\"text-center\">chip: ${table.players[1].chips}</p>\n                            <div class=\"d-flex justify-content-center row\">\n                                ${View.createCardView(table.players[1])}\n                            </div>\n                        </div>\n                        \n                        \n                        <div id=\"${table.players[3]}\" class=\"col-3\">\n                            <h3 class=\"m-0 text-white text-center rem3\">${table.players[3].name}</h3>\n                            <p id=\"player3status\" class=\"text-center\">status: ${table.players[3].status}</p>\n                            <p class=\"text-center\">bet: ${table.players[3].betAmount}</p>\n                            <p class=\"text-center\">chip: ${table.players[3].chips}</p>\n                            <div class=\"d-flex justify-content-center row\">\n                                ${View.createCardView(table.players[3])}\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div id=\"playerArea\" class=\"d-flex justify-content-center mt-5\">\n                </div>\n            </div>\n        </div>`;\n        return (_a = document.getElementById(\"root\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static createBetPhase(table) {\n        var _a;\n        let container = document.createElement(\"div\");\n        container.innerHTML = `\n        <div id=\"betamount\">\n            <h4>Your Bet ${table.players[1].betAmount}</h4>\n        </div>\n        <div id=\"chips\" class=\"d-flex align-items-center\">\n        </div>\n        <div class=\"d-grid col-12 my-4\">\n            <button id=\"betbtn\" class=\"btn btn-primary\" disabled>ok</button>\n            <button id=\"resetbetbtn\" class=\"btn btn-danger mt-2\">Reset</button>\n        </div>\n        `;\n        for (let chip of table.betDenominations) {\n            let chipBtn = document.createElement(\"div\");\n            chipBtn.innerHTML = `\n            <button id=\"${chip}\" type=\"button\" class=\"btn btn-warning btn-circle mx-4\" value=${chip}>${chip}</button>\n            </button>\n            `;\n            chipBtn.addEventListener(\"click\", () => {\n                document.querySelectorAll(\"#betamount\")[0].innerHTML = `<h4>Your Bet ${table.players[1].betAmount}</h4>`;\n            });\n            container.querySelectorAll(\"#chips\")[0].append(chipBtn);\n        }\n        return (_a = document.getElementById(\"playerArea\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static createActionPhase(table) {\n        var _a;\n        let container = document.createElement(\"div\");\n        container.innerHTML = `\n        <div id=\"actions\" class=\"d-flex align-items-center\">\n        </div>\n        `;\n        for (let action of table.getTurnPlayer().actions) {\n            let actionBtn = document.createElement(\"div\");\n            actionBtn.innerHTML = `\n            <button id=\"${action}\" type=\"button\" class=\"btn btn-warning btn-circle mx-4\" value=${action}>${action}</button>\n            `;\n            container.querySelectorAll(\"#actions\")[0].append(actionBtn);\n        }\n        return (_a = document.getElementById(\"playerArea\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static createCardView(player) {\n        let container = document.createElement(\"div\");\n        for (let card of player.hand) {\n            container.innerHTML += `\n                <div id=\"${card.suit + card.rank}\" class=\"border text-center m-2 w-15 bg-white\">\n                    <div>\n                    </div>\n                    <div>\n                        <p>${card.rank}</p>\n                    </div>\n                </div>\n                `;\n            if (card.suit === \"H\") {\n                container.querySelectorAll(`#${card.suit + card.rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♥️</p>`;\n            }\n            else if (card.suit === \"D\") {\n                container.querySelectorAll(`#${card.suit + card.rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♦️</p>`;\n            }\n            else if (card.suit === \"C\") {\n                container.querySelectorAll(`#${card.suit + card.rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♣️</p>`;\n            }\n            else if (card.suit === \"S\") {\n                container.querySelectorAll(`#${card.suit + card.rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♠️</p>`;\n            }\n        }\n        return container.innerHTML;\n    }\n    static faceDownCard(table) {\n        let faceDownCard = table.house.hand[0].suit + table.house.hand[0].rank;\n        document.querySelectorAll(`#${faceDownCard}`)[0].innerHTML = `<i class=\"fa-solid fa-question fa-2x\"></i>`;\n    }\n    static faceUpCard(table) {\n        let faceUpCard = table.house.hand[0].suit + table.house.hand[0].rank;\n        document.querySelectorAll(`#${faceUpCard}`)[0].innerHTML = `\n            <div>\n                <p>${table.house.hand[0].suit}</p>\n            </div>\n            <div>\n                <p>${table.house.hand[0].rank}</p>\n            </div>\n        `;\n        if (table.house.hand[0].suit === \"H\") {\n            document.querySelectorAll(`#${table.house.hand[0].suit + table.house.hand[0].rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♥️</p>`;\n        }\n        else if (table.house.hand[0].suit === \"D\") {\n            document.querySelectorAll(`#${table.house.hand[0].suit + table.house.hand[0].rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♦️</p>`;\n        }\n        else if (table.house.hand[0].suit === \"C\") {\n            document.querySelectorAll(`#${table.house.hand[0].suit + table.house.hand[0].rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♣️</p>`;\n        }\n        else if (table.house.hand[0].suit === \"S\") {\n            document.querySelectorAll(`#${table.house.hand[0].suit + table.house.hand[0].rank}`)[0].querySelectorAll(\"div\")[0].innerHTML = `<p>♠️</p>`;\n        }\n    }\n    static createResultModal(table) {\n        var _a;\n        let container = document.createElement(\"div\");\n        container.innerHTML = `\n        <div id=\"resultmodal\" class=\"modal\" tabindex=\"-1\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Round ${table.roundCounter}</h5>\n                    </div>\n                    <div class=\"modal-body\">\n                        <p>${table.resultLog[0]}</p>\n                        <p>${table.resultLog[1]}</p>\n                        <p>${table.resultLog[2]}</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button id=\"nextround\" type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        `;\n        return (_a = document.getElementById(\"root\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static createGameOverModal() {\n        var _a;\n        let container = document.createElement(\"div\");\n        container.innerHTML = `\n        <div id=\"gameovermodal\" class=\"modal\" tabindex=\"1\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5>Game Over</h5>\n                    </div>\n                    <div class=\"modal-body\">\n                        <p>You are Bust Out.\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button id=\"newgame\" type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n        </div>\n        `;\n        return (_a = document.getElementById(\"root\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static createNewGameBtn(chip) {\n        var _a;\n        let status = chip > 0 ? \"Next Round\" : \"New Game\";\n        let container = document.createElement(\"div\");\n        container.innerHTML = `\n        <button id=${status} type=\"button\" class=\"btn btn-primary \">${status}</button>\n        `;\n        return (_a = document.getElementById(\"playerArea\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n    static disabledSecondActionBtn(table) {\n        let doubleBtn = document.getElementById(\"double\");\n        doubleBtn.disabled = true;\n        let surrenderBtn = document.getElementById(\"surrender\");\n        surrenderBtn.disabled = true;\n    }\n    static displayResult(player) {\n        var _a;\n        let result = player.result;\n        let container = document.createElement(\"div\");\n        container.classList.add(\"text-center\");\n        container.innerHTML = `\n        <h2>${result}</h2>\n        `;\n        return (_a = document.getElementById(\"player1info\")) === null || _a === void 0 ? void 0 : _a.append(container);\n    }\n}\nexports.View = View;\n\n\n//# sourceURL=webpack://blackjack/./src/views/blackJackViews.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;